{"version":3,"file":"static/js/752.e485aec8.chunk.js","mappings":"+LAEMA,E,QAAgBC,GAAAA,IAAH,8F,SCiBnB,EAhBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,+KCfKC,EAAaR,EAAAA,GAAAA,GAAH,sBAEVS,EAAST,EAAAA,GAAAA,GAAH,sBAENU,EAAOV,EAAAA,GAAAA,EAAH,sB,kBCiDV,EAhDgB,WACd,OAAkCW,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAO,mCAAG,sGAEZN,GAAa,GAFD,UAGcO,EAAAA,EAAAA,IAAgBJ,GAH9B,mBAGJK,EAHI,EAGJA,QAHI,yCAKHC,EAAAA,GAAAA,MAAY,wBALT,OAOZP,EAAWM,GAPC,kDASZC,EAAAA,GAAAA,MAAY,mDATA,yBAWZT,GAAa,GAXD,6EAAH,qDAebM,GAhBoB,CAiBrB,GAAE,CAACH,KAKF,2BACGJ,IAAa,SAACW,EAAA,EAAD,IACM,IAAnBT,EAAQU,QACP,wBACGV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,UAASkB,KACT,SAACjB,EAAD,UAAOkB,MAFQF,EAKpB,OAGH,8EAIP,C,kMCnDKG,EAAM,mCACNC,EAAM,+BAENC,EAAgB,mCAAG,6FACjBC,EADiB,UACFF,EADE,uCACgCD,GADhC,SAEAI,EAAAA,EAAAA,IAAUD,GAFV,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,gFACfL,EADe,UACAF,EADA,iCAC4BD,EAD5B,kBACyCQ,EADzC,oBAEEJ,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,EAASC,MAHK,2CAAH,sDAMdG,EAAe,mCAAG,WAAMtB,GAAN,gFAChBgB,EADgB,UACDF,EADC,kBACYd,EADZ,oBAC+Ba,GAD/B,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,OAGtBK,QAAQC,IAAIN,EAASC,MAHC,kBAIfD,EAASC,MAJM,2CAAH,sDAOfM,EAAY,mCAAG,WAAMzB,GAAN,kFACbgB,EADa,UACEF,EADF,kBACed,EADf,4BAC0Ca,GAD1C,SAEII,EAAAA,EAAAA,IAAUD,GAFd,uBAEXG,EAFW,EAEXA,KAFW,kBAIZA,EAAKO,MAJO,2CAAH,sDAOZtB,EAAe,mCAAG,WAAMJ,GAAN,gFAChBgB,EADgB,UACDF,EADC,kBACYd,EADZ,4BACuCa,GADvC,SAECI,EAAAA,EAAAA,IAAUD,GAFX,cAEhBE,EAFgB,yBAIfA,EAASC,MAJM,2CAAH,qD","sources":["components/Loader/loader.styles.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styles.jsx","components/Reviews/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { LoaderWrapper };","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper } from './loader.styles';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nconst ReviewItem = styled.li``;\n\nconst Author = styled.h2``;\n\nconst Text = styled.p``;\n\nexport { ReviewItem, Author, Text };","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchApi';\nimport { toast } from 'react-toastify';\nimport { Author, ReviewItem, Text } from './Reviews.styles';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        if (!results) {\n          return toast.error('No Cast Information');\n        }\n        setReviews(results);\n      } catch (error) {\n        toast.error('Sorry, something went wrong...Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  // console.log(reviews);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <Author>{author}</Author>\n                <Text>{content}</Text>\n              </ReviewItem>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = '99ce8c1f4134cdb2b8e8d4741e691c56';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getPopularMovies = async () => {\n  const apiConfig = `${URL}/trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getSearchMovie = async query => {\n  const apiConfig = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  const response = await axios.get(apiConfig);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  console.log(response.data);\n  return response.data;\n};\n\nconst getMovieCast = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(apiConfig);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const apiConfig = `${URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios.get(apiConfig);\n  // console.log(response);\n  return response.data;\n};\n\nexport {\n  getPopularMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};"],"names":["LoaderWrapper","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ReviewItem","Author","Text","useState","isLoading","setIsLoading","reviews","setReviews","movieId","useParams","useEffect","getCast","getMovieReviews","results","toast","Loader","length","map","id","author","content","KEY","URL","getPopularMovies","apiConfig","axios","response","data","getSearchMovie","query","getMovieDetails","console","log","getMovieCast","cast"],"sourceRoot":""}